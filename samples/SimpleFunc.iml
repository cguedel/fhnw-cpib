program SimpleFunc
global
  //const y:ratio;
  var z:ratio;
  //const y:int;
  //const b:bool;
  //const i:int;
  //proc incrZ (m:bool)
  //local
  //  var k:ratio
  //do
  //  skip
    //x := (k + 1) + i + j
  //endproc;

  fun getZ () returns zx:ratio
  local
    var g:bool
  do
    debugout 3333;
    zx := 6
  endfun;
//;
  proc procZ (max:int,min:int)
  local
    y:int
  do
    while min < max
    do
      min := min + 1;
      z := z + 5
    endwhile
  endproc

  //;proc next()
  //do
//    skip
//  endproc
do
  // debugin z;
  // debugout denum z;
  // debugout not b;
  // debugout -i;
  // debugout +i;
  // debugout (z > i) = b;
  // debugout (z > i) = z;
  // debugout getZ();
  // call getZ()
  //debugin y;
  //debugin z;
  //debugout (y + z) > (y - z);
  //debugout 1 - 1 - 1
  //debugout y > z
  //debugout y - z;
  //debugout y * z;
  //debugout y divE z
  z := 5;
  call procZ(4,2);
  //z := 34;
  //debugout z;
  debugout getZ();
  debugout z;
  if (not (1/3 > 1/2) &? getZ() > 5) then
    debugout 1
  else
    debugout 2
  endif;
  debugout 10 modE 3
endprogram
